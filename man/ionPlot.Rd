% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/image_tools.R
\name{ionPlot}
\alias{ionPlot}
\title{Plot ion images}
\usage{
ionPlot(
  image,
  dims,
  log = FALSE,
  flipy = FALSE,
  compound = NULL,
  pal = "A",
  title = NULL,
  type = "rel",
  xvals = NULL,
  yvals = NULL,
  addpix = TRUE
)
}
\arguments{
\item{image}{Data frame of your imaging data, scans as rows}

\item{dims}{x,y dimension pair of your pixel dimensions}

\item{log}{Whether to log transform your image, defaults to FALSE}

\item{flipy}{Whether to mirror the y axis, defaults to FALSE}

\item{compound}{Which ion to plot (either numeric by order, or "tic" for sum of all)}

\item{pal}{Which viridis palette to use, defaults to A (magma)}

\item{title}{Title label to add to plot}

\item{type}{Defaults to relative, using x,y grid coordinates derived from dimensions, set to "abs" for instrument reported values}

\item{xvals}{Vector of absolute x coordinate values}

\item{yvals}{Vector of absolute y coordinate values}

\item{addpix}{Whether to duplicate the final xvals and yvals values to account for a "missing" pixel, defaults to TRUE}
}
\description{
Plot ion images
}
\examples{
data <- MSnbase::readSRMData("path/to/file.mzML")
datamatrix <- getData(data)
dimlist <- estDims2(260432)
plotlist <- plotDims(input_data = datamatrix, dims_list = dimlist)
plotlist <- plotDims(input_data = datamatrix, dims_list = dimlist)
xydims <- getPos(filename = "path/to/file.raw/")
plot <- ionPlot(datamatrix, numScans, log = TRUE, compound = "tic", title = "test", xvals = xydims[,1], yvals = xydims[,2])
plot
}
